version: "0.0.1"
environments:
  dev:
    # Required
    - name: "function-name"

      type: back|front

      # Required
      rg|resource_group|project|account: "resource-group-name"

      # Required IMPORTANT end path with /
      package_path: ./code/dist/

      # Name of the artifact path to upload the package
      # JFROG Path = function-<snapshot/release>-local/sisu/<artifact_name>/<tag_name>
      artifact_id: "artifact-name"

      # Maven: name of the build profile
      # Node: name of the build command. ej: npm run build:<profile-name>
      profile: "profile-name"

      # Required cloud region format
      # ej: aws => eu-west-1
      # ej: azure => westeurope
      # ej: gcp => europe-west1
      region: eu-west-1|westeurope|europe-west1

      # Required (azure|aws|gcp)
      cloud: azure|aws|gcp

      # Required (java11|java17|node16)
      runtime: java11|java17|node16

      # Optional list os strings key=value
      environment:
        - FOO=value

      # Optional (only gcp)
      secrets:
        - name: "origin"
          version: "version"
          path: "/path-inside-function/"

      # Optional
      # functions: [] # empty => all disabled
      # functions: null # not set => all enabled
      functions: # nor set => only a,b,c
        - a
        - b
        - c

      # Optional only for front apps
      sa|storage_accopunt|s3|gs|google_storage: "storage-account-name"

      # Optional
      # if not set => cdn not run
      cdn:
        path: "/path-to-cache/index.html"
        front-door:
          resource_group: "resource-group-name"
          name: "cdn-name"
          endpoint: "front"
          domain: "example.com"
        akamai:
          domain: "example.com"
        cloudfront:
          account: "aws-account"
          domain: "example.com"

      # Optional
      # if not set => db not run
      db:
        type: postgresql
        name: "db-name"
        rg|resource_group|project|account: "resource-group-name"

      vault:
        rg|resource_group|project|account: "resource-group-name"
        name: "vault-name"

      swap:
        mode: slot|traffic

      testing:
        repository: <org>/<repo>
